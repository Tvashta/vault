// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Unit Testing Announce Proper details must be rendered 1`] = `
Array [
  <div
    className="dashboard"
  >
    <NavBar />
    <div
      className="profile"
    >
      <Card
        body={false}
      >
        <CardBody>
          <h2
            className="text-center"
          >
            Announce
          </h2>
          <Form
            inline={false}
          >
            <FormGroup
              id="sub"
            >
              <FormLabel
                column={false}
                srOnly={false}
              >
                Name
              </FormLabel>
              <div>
                <img
                  alt=""
                  className="form-img"
                />
                <input
                  className="form-input"
                  name="sub"
                  placeholder="Subject"
                  type="text"
                />
              </div>
            </FormGroup>
            <FormGroup
              id="msg"
            >
              <FormLabel
                column={false}
                srOnly={false}
              >
                Message
              </FormLabel>
              <div>
                <textarea
                  className="form-input"
                  cols="50"
                  name="msg"
                  placeholder="Tell us what you feel"
                  rows="6"
                />
              </div>
            </FormGroup>
            <FormGroup
              id="toMail"
            >
              <FormLabel
                column={false}
                srOnly={false}
              >
                Click on the plus sign to add users
              </FormLabel>
              <div
                className="input-group"
              >
                <select
                  className="custom-select form-input"
                >
                  <option
                    defaultValue="1"
                  >
                    Add user to folder
                  </option>
                </select>
                <div
                  className="input-group-append"
                >
                  <button
                    className="btn btn-outline-secondary"
                    type="button"
                  >
                    +
                  </button>
                </div>
              </div>
            </FormGroup>
            <div
              className="shareItems"
            >
              <button>
                <svg
                  className="bi bi-trash-fill"
                  fill="#f05454"
                  height="24"
                  viewBox="0 0 16 16"
                  width="24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z"
                  />
                </svg>
              </button>
              <p />
            </div>
            <div
              className="box-3"
            >
              <button
                className="btn btn-three w-100"
                type="submit"
              >
                <span>
                  SEND
                </span>
              </button>
            </div>
          </Form>
        </CardBody>
      </Card>
    </div>
    <Footer />
  </div>,
]
`;

exports[`Unit Testing Chat Proper details must be rendered 1`] = `
Array [
  <div
    className="dashboard"
  >
    <NavBar />
    <div
      className="chat"
    >
      <section>
        <ChatRoom />
      </section>
    </div>
  </div>,
]
`;

exports[`Unit Testing Contact Proper details must be rendered 1`] = `
Array [
  <div
    className="dashboard"
  >
    <NavBar />
    <div
      className="profile"
    >
      <Card
        body={false}
      >
        <CardBody>
          <h2
            className="text-center"
          >
            Contact Us
          </h2>
          <h5>
            Got an revolutionary idea, want to tell us how we can be better or just how you liked us, give us a message! We would love to hear from you
          </h5>
          <Form
            inline={false}
          >
            <FormGroup
              id="email"
            >
              <FormLabel
                column={false}
                srOnly={false}
              >
                Email
              </FormLabel>
              <div>
                <img
                  alt=""
                  className="form-img"
                />
                <input
                  className="form-input"
                  name="email"
                  placeholder="Enter your mail id"
                  required={true}
                  type="email"
                />
              </div>
            </FormGroup>
            <FormGroup
              id="name"
            >
              <FormLabel
                column={false}
                srOnly={false}
              >
                Name
              </FormLabel>
              <div>
                <img
                  alt=""
                  className="form-img"
                />
                <input
                  className="form-input"
                  name="name"
                  placeholder="Enter your name"
                  type="text"
                />
              </div>
            </FormGroup>
            <FormGroup
              id="name"
            >
              <FormLabel
                column={false}
                srOnly={false}
              >
                Message
              </FormLabel>
              <div>
                <textarea
                  className="form-input"
                  cols="50"
                  name="msg"
                  placeholder="Tell us what you feel"
                  rows="6"
                />
              </div>
            </FormGroup>
            <div
              className="box-3"
            >
              <button
                className="btn btn-three w-100"
                type="submit"
              >
                <span>
                  SEND
                </span>
              </button>
            </div>
          </Form>
        </CardBody>
      </Card>
    </div>
    <Footer />
  </div>,
]
`;

exports[`Unit Testing Dashboard Proper details must be rendered 1`] = `
Array [
  <div
    className="dashboard"
  >
    <NavBar />
    <div
      className="d-flex align-items-center"
    >
      <AddFolder />
      <AddFile />
      <div
        className="search-bar"
      >
        <svg
          className="bi bi-search form-img"
          fill="#05505B"
          height="16"
          viewBox="0 0 18 18"
          width="16"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"
          />
        </svg>
        <input
          className="form-input"
          placeholder="Search"
          type="text"
        />
      </div>
    </div>
    <div
      className="folder-container"
    >
      <div
        className="d-flex flex-wrap"
      >
        <div
          className="p-2"
          style={
            Object {
              "maxWidth": "250px",
            }
          }
        >
          <Folder />
        </div>
      </div>
      <hr
        className="line"
      />
      <div
        className="d-flex flex-wrap"
      >
        <div
          className="p-2"
          style={
            Object {
              "maxWidth": "15rem",
            }
          }
        >
          <File />
        </div>
      </div>
    </div>
    <div
      className="empty-folder"
    >
      <div>
        <h1>
          Oops! This folder is empty.
        </h1>
        <h4>
          Add content using the buttons in the bottom-right corner.
        </h4>
        <h5>
          Till then have a look at this cute bunny...
        </h5>
      </div>
      <img
        alt=""
        src="rabbit.png"
      />
    </div>
    <Footer />
  </div>,
]
`;

exports[`Unit Testing Faq Proper details must be rendered 1`] = `
Array [
  <div
    className="dashboard"
  >
    <NavBar />
    <div
      className="folder-container"
    >
      <div
        className="card-body"
      >
        <h2
          className="text-center"
        >
          Frequently Asked Questions [FAQ]
        </h2>
      </div>
      <div
        className="faq"
      >
        <h4>
          What are the features that vault offers?
        </h4>
        <h6>
          1. Custom Directory Structure
        </h6>
        <h6>
          2. Share folders and view folders shared with you
        </h6>
        <h6>
          3. Announce something to selected people in your organization
        </h6>
        <h6>
          4. Search folders with ease
        </h6>
        <h6>
          5. And so much more!
        </h6>
        <h4>
          How to use Digital Course file?
        </h4>
        <h6>
          Step 1: Go to Vault dashboard
        </h6>
        <h6>
          Step 2: Upload files or create folders
        </h6>
        <h6>
          Step 3: Share and organize files and folders
        </h6>
        <h4>
          What all can I upload?
        </h4>
        <h6>
          Documents, Images, Audio, Video, Whatever you want to!
        </h6>
        <h4>
          How do I Upload files or make folders
        </h4>
        <h6>
          1. At the Bottom right, click on the Icons to upload file or create folder.
        </h6>
        <h6>
          2. Choose the file to upload or name the folder to create
        </h6>
        <h4>
          How to share folders?
        </h4>
        <h6>
          1. Go to Profile
        </h6>
        <h6>
          2. Register yourself into your organisation by giving your organisation name
        </h6>
        <h6>
          3. Right Click the folder you want to share.
        </h6>
        <h6>
          4. Select the members to whom you want to share
        </h6>
        <h6>
          5. Click Share
        </h6>
        <h4>
          What is the limit for creating folders?
        </h4>
        <h6>
          The sky is the limit! We provide infinite nesting
        </h6>
        <h4>
          Contact Vault support
        </h4>
        <h6>
          Get help with common problems above. If you need help with a different vault problem, contact us.
        </h6>
        <h4>
          Submit user feedback
        </h4>
        <h6>
          If you've discovered a new bug or technical issue, report the issue right through either the contact us form or at admin@vault.com
        </h6>
      </div>
    </div>
    <Footer />
  </div>,
]
`;

exports[`Unit Testing Favourites Proper details must be rendered 1`] = `
Array [
  <div>
    <NavBar />
    <div
      className="folder-container"
    >
      <div
        className="d-flex flex-wrap"
      >
        <div
          className="p-2"
          style={
            Object {
              "maxWidth": "15rem",
            }
          }
        >
          <File />
        </div>
      </div>
    </div>
    <div
      className="empty-folder"
    >
      <div>
        <h1>
          Oops! This folder is empty.
        </h1>
        <h4>
          Add content using the buttons in the bottom-right corner.
        </h4>
        <h5>
          Till then have a look at this cute bunny...
        </h5>
      </div>
      <img
        alt=""
        src="rabbit.png"
      />
    </div>
  </div>,
]
`;

exports[`Unit Testing File Proper details must be rendered 1`] = `
Array [
  <div>
    <a
      className="file"
      rel="noopener noreferrer"
      target="_blank"
    >
      <div
        className="img-zoom"
      >
        <img />
      </div>
      <p
        className="text-truncate"
      >
        File name
      </p>
    </a>
    <div
      className="drop-down"
    >
      <button
        className="dropdown-item"
      >
        Favourite
      </button>
    </div>
  </div>,
]
`;

exports[`Unit Testing Folder Proper details must be rendered 1`] = `
Array [
  <div>
    <Modal
      animation={true}
      autoFocus={true}
      backdrop={true}
      dialogAs={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      enforceFocus={true}
      keyboard={true}
      restoreFocus={true}
      show={false}
    >
      <ModalBody>
        <Button
          active={false}
          className="btn-x"
          disabled={false}
          variant="secondary"
        >
          x
        </Button>
        <h3>
          Are you sure?
        </h3>
        <p>
          Deleting would erase all contents of this folder permanently
        </p>
      </ModalBody>
      <ModalFooter>
        <Button
          active={false}
          disabled={false}
          variant="light"
        >
          No! Go back
        </Button>
        <Button
          active={false}
          disabled={false}
          variant="danger"
        >
          Yes! Delete
        </Button>
      </ModalFooter>
    </Modal>
    <Modal
      animation={false}
      autoFocus={true}
      backdrop={true}
      dialogAs={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      enforceFocus={true}
      keyboard={true}
      restoreFocus={true}
      show={false}
    >
      <Button
        active={false}
        className="btn-x"
        disabled={false}
        variant="secondary"
      >
        x
      </Button>
      <Form
        inline={false}
      >
        <ModalBody>
          <FormGroup>
            <FormLabel
              column={false}
              srOnly={false}
            >
              New folder Name
            </FormLabel>
            <FormControl
              required={true}
              type="text"
            />
          </FormGroup>
        </ModalBody>
        <ModalFooter>
          <Button
            active={false}
            disabled={false}
            type="submit"
            variant="success"
          >
            Rename
          </Button>
          <Button
            active={false}
            disabled={false}
            variant="outline-dark"
          >
            Close
          </Button>
        </ModalFooter>
      </Form>
    </Modal>
    <Button
      active={false}
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      className="text-truncate w-100"
      disabled={false}
      variant="outline-light"
    >
      <span
        className="btn-label"
      >
        Name
      </span>
    </Button>
    <div
      className="drop-down"
    >
      <button
        className="dropdown-item"
      >
        Rename
      </button>
      <button
        className="dropdown-item"
      >
        Delete
      </button>
    </div>
  </div>,
]
`;

exports[`Unit Testing Footer Proper details must be rendered 1`] = `
Array [
  <div
    className="footer"
  >
    <nav
      className="navbar navbar-dark navbar-expand-sm"
    >
      <ul
        className="navbar-nav mx-auto order-0"
      >
        <li
          className="nav-item"
        >
          <Link
            className="nav-link"
            to="/contact"
          >
            Contact us
          </Link>
        </li>
        <li
          className="nav-item"
        >
          <Link
            className="nav-link"
            to="/"
          >
            Made with ✨
          </Link>
        </li>
        <li
          className="nav-item"
        >
          <Link
            className="nav-link"
            to="/faq"
          >
            FAQ
          </Link>
        </li>
        <li
          className="chat"
        >
          <Link
            className="nav-link"
            to="/chat"
          >
            Chat
          </Link>
        </li>
      </ul>
    </nav>
  </div>,
]
`;

exports[`Unit Testing Forgot Password Proper details must be rendered 1`] = `
Array [
  <div
    className="login"
  >
    <Container
      className="d-flex align-items-center  height-100vh"
      fluid={false}
    >
      <div
        className="w-100 size-400"
      >
        <Card
          body={false}
        >
          <CardBody>
            <h2
              className="text-center mb-4"
            >
              Password Reset
            </h2>
            <Alert
              closeLabel="Close alert"
              show={true}
              transition={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "appear": false,
                    "in": false,
                    "mountOnEnter": false,
                    "timeout": 300,
                    "unmountOnExit": false,
                  },
                  "render": [Function],
                }
              }
              variant="danger"
            >
              error
            </Alert>
            <Alert
              closeLabel="Close alert"
              show={true}
              transition={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "appear": false,
                    "in": false,
                    "mountOnEnter": false,
                    "timeout": 300,
                    "unmountOnExit": false,
                  },
                  "render": [Function],
                }
              }
              variant="success"
            >
              message
            </Alert>
            <Form
              inline={false}
            >
              <FormGroup
                id="email"
              >
                <FormLabel
                  column={false}
                  srOnly={false}
                >
                  Email
                </FormLabel>
                <input
                  className="form-input"
                  required={true}
                  type="email"
                />
              </FormGroup>
              <div
                className="box-3"
              >
                <button
                  className="btn btn-three w-100"
                  type="submit"
                >
                  <span>
                    RESET PASSWORD
                  </span>
                </button>
              </div>
            </Form>
            <div
              className="w-100 text-center form-txt mt-3"
            >
              <Link
                to="/login"
              >
                Login
              </Link>
            </div>
          </CardBody>
        </Card>
        <div
          className="w-100 text-center mt-2 form-txt"
        >
          Need an account? 
          <Link
            to="/signup"
          >
            Sign Up
          </Link>
        </div>
      </div>
    </Container>
  </div>,
]
`;

exports[`Unit Testing Login Proper details must be rendered 1`] = `
Array [
  <div
    className="login"
  >
    <h1>
      V A U L T
    </h1>
    <Container
      className="d-flex align-items-center height-100vh"
      fluid={false}
    >
      <div
        className="w-100 size-400"
      >
        <Card
          body={false}
        >
          <CardBody>
            <h2
              className="text-center mb-4"
            >
              Sign Up
            </h2>
            <Alert
              closeLabel="Close alert"
              show={true}
              transition={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "appear": false,
                    "in": false,
                    "mountOnEnter": false,
                    "timeout": 300,
                    "unmountOnExit": false,
                  },
                  "render": [Function],
                }
              }
              variant="danger"
            >
              error
            </Alert>
            }
            <Form
              inline={false}
            >
              <FormGroup
                id="email"
              >
                <img
                  alt=""
                  className="form-img"
                  src="2.PNG"
                />
                <input
                  className="form-input"
                  required={true}
                  type="email"
                />
              </FormGroup>
              <FormGroup
                id="password"
              >
                <img
                  alt=""
                  className="form-img"
                  src="1.PNG"
                />
                <input
                  className="form-input"
                  required={true}
                  type="password"
                />
              </FormGroup>
              <div
                className="box-3"
              >
                <button
                  className="btn btn-three w-100"
                  type="submit"
                >
                  <span>
                    LOGIN
                  </span>
                </button>
              </div>
            </Form>
          </CardBody>
        </Card>
        <div
          className="w-100 text-center mt-2 form-txt"
        >
          <Link
            to="/signup"
          >
            Need an account? SignUp
          </Link>
        </div>
        <e />
      </div>
    </Container>
  </div>,
]
`;

exports[`Unit Testing Navigation bar Proper details must be rendered 1`] = `
Array [
  <nav
    className="navbar navbar-dark navbar-expand-sm justify-content-between"
  >
    <Link
      className="navbar-brand mb-0 h1"
      to="/"
    >
      V A U L T
    </Link>
    <ul
      className="navbar-nav"
    >
      <li
        className="nav-item"
      >
        <Link
          className="nav-link"
          to="/profile"
        >
          Profile 
        </Link>
      </li>
      <li
        className="nav-item"
      >
        <Link
          className="nav-link"
          to="/fav"
        >
          Favourites 
        </Link>
      </li>
    </ul>
  </nav>,
]
`;

exports[`Unit Testing Path Proper details must be rendered 1`] = `
Array [
  <Breadcrumb
    className="flex-grow-1"
    label="breadcrumb"
    listProps={
      Object {
        "className": "bg-trans m-0 ml-6",
      }
    }
  >
    <BreadcrumbItem
      active={false}
      className="text-truncate d-inline-block path-item"
      linkAs={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      linkProps={Object {}}
      style={
        Object {
          "maxWidth": "150px",
        }
      }
    >
      Folder Name
    </BreadcrumbItem>
    <BreadcrumbItem
      active={true}
      className="text-truncate d-inline-block path-item"
      linkProps={Object {}}
      style={
        Object {
          "maxWidth": "200px",
        }
      }
    >
      Folder Name
    </BreadcrumbItem>
  </Breadcrumb>,
]
`;

exports[`Unit Testing Profile Proper details must be rendered 1`] = `
Array [
  <div
    className="profile"
  >
    <div
      className="back-btn"
    >
      <Button
        active={false}
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "innerRef": [Function],
              "onClick": [Function],
              "replace": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        className="text-truncate w-100"
        disabled={false}
        to="/"
        variant="outline-light"
      >
        <span
          className="btn-label"
        >
          Back
        </span>
      </Button>
    </div>
    <Card
      body={false}
    >
      <CardBody>
        <h2
          className="text-center mb-4"
        >
          Profile
        </h2>
        <Alert
          closeLabel="Close alert"
          show={true}
          transition={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "appear": false,
                "in": false,
                "mountOnEnter": false,
                "timeout": 300,
                "unmountOnExit": false,
              },
              "render": [Function],
            }
          }
          variant="danger"
        >
          error
        </Alert>
        }
        <p>
          <strong>
            Email:
          </strong>
           email
        </p>
        <p>
          <strong>
            Name:
          </strong>
           name
        </p>
        <p>
          <strong>
            Phone Number:
          </strong>
           ph
        </p>
        <Link
          className="box3"
          to="/update-profile"
        >
          <button
            className="btn btn-three w-100 mt-3"
          >
            <span>
              UPDATE PROFILE
            </span>
          </button>
        </Link>
      </CardBody>
    </Card>
    <div
      className="w-100 text-center mt-2"
    >
      <Button
        active={false}
        className="logout-btn"
        disabled={false}
        variant="link"
      >
        Log Out
      </Button>
    </div>
  </div>,
]
`;

exports[`Unit Testing Search Proper details must be rendered 1`] = `
Array [
  <div
    className="dashboard"
  >
    <NavBar />
    <input
      className="form-input search"
      placeholder="Type to Filter"
      type="text"
    />
    <div
      className="folder-container"
    >
      <div
        className="d-flex flex-wrap"
      >
        <div
          className="p-2"
          style={
            Object {
              "maxWidth": "250px",
            }
          }
        >
          <Folder />
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`Unit Testing Shared Proper details must be rendered 1`] = `
Array [
  <div>
    <NavBar />
    <div
      className="folder-container"
    >
      <div
        className="d-flex flex-wrap"
      >
        <div
          className="p-2"
          style={
            Object {
              "maxWidth": "250px",
            }
          }
        >
          <Folder />
        </div>
      </div>
    </div>
    <div
      className="empty-folder"
    >
      <div>
        <h1>
          Oops! This folder is empty.
        </h1>
        <h4>
          When someone shares a folder to you, you will find it here.
        </h4>
        <h5>
          Till then have a look at this cute bunny...
        </h5>
      </div>
      <img
        alt=""
      />
    </div>
  </div>,
]
`;

exports[`Unit Testing Signup Proper details must be rendered 1`] = `
Array [
  <div
    className="login"
  >
    <h1>
      V A U L T
    </h1>
    <Container
      className="d-flex align-items-center height-100vh"
      fluid={false}
    >
      <div
        className="w-100 size-400"
      >
        <Card
          body={false}
        >
          <CardBody>
            <h2
              className="text-center mb-4"
            >
              Sign Up
            </h2>
            <Alert
              closeLabel="Close alert"
              show={true}
              transition={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "appear": false,
                    "in": false,
                    "mountOnEnter": false,
                    "timeout": 300,
                    "unmountOnExit": false,
                  },
                  "render": [Function],
                }
              }
              variant="danger"
            >
              error
            </Alert>
            }
            <Form
              inline={false}
            >
              <FormGroup
                id="email"
              >
                <img
                  alt=""
                  className="form-img"
                  src="2.PNG"
                />
                <input
                  className="form-input"
                  required={true}
                  type="email"
                />
              </FormGroup>
              <FormGroup
                id="password"
              >
                <img
                  alt=""
                  className="form-img"
                  src="1.PNG"
                />
                <input
                  className="form-input"
                  required={true}
                  type="password"
                />
              </FormGroup>
              <FormGroup
                id="password-confirm"
              >
                <img
                  alt=""
                  className="form-img"
                  src="1.PNG"
                />
                <input
                  className="form-input"
                  required={true}
                  type="password"
                />
              </FormGroup>
              <div
                className="box-3"
              >
                <button
                  className="btn btn-three w-100"
                  type="submit"
                >
                  <span>
                    SIGN UP
                  </span>
                </button>
              </div>
            </Form>
          </CardBody>
        </Card>
        <div
          className="w-100 text-center mt-2 form-txt"
        >
          <Link
            to="/login"
          >
            Already have an account? Login
          </Link>
        </div>
        <e />
      </div>
    </Container>
  </div>,
]
`;

exports[`Unit Testing Update Profile Proper details must be rendered 1`] = `
Array [
  <div
    className="profile"
  >
    <Card
      body={false}
    >
      <CardBody>
        <h2
          className="text-center mb-4"
        >
          Update Profile
        </h2>
        <Alert
          closeLabel="Close alert"
          show={true}
          transition={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "appear": false,
                "in": false,
                "mountOnEnter": false,
                "timeout": 300,
                "unmountOnExit": false,
              },
              "render": [Function],
            }
          }
          variant="danger"
        >
          error
        </Alert>
        <Form
          inline={false}
        >
          <FormGroup
            id="email"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              Email
            </FormLabel>
            <div>
              <img
                alt=""
                className="form-img"
                src="2.PNG"
              />
              <input
                className="form-input"
                type="email"
              />
            </div>
          </FormGroup>
          <FormGroup
            id="password"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              Password
            </FormLabel>
            <div>
              <img
                alt=""
                className="form-img"
                src="1.PNG"
              />
              <input
                className="form-input"
                placeholder="Leave blank to keep the same"
                type="password"
              />
            </div>
          </FormGroup>
          <FormGroup
            id="password-confirm"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              Password Confirmation
            </FormLabel>
            <div>
              <img
                alt=""
                className="form-img"
                src="1.PNG"
              />
              <input
                className="form-input"
                placeholder="Leave blank to keep the same"
                type="password"
              />
            </div>
          </FormGroup>
          <FormGroup
            id="name"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              Name
            </FormLabel>
            <div>
              <img
                alt=""
                className="form-img"
                src="name.PNG"
              />
              <input
                className="form-input"
                name="name"
                placeholder="Enter your name"
                type="text"
              />
            </div>
          </FormGroup>
          <FormGroup
            id="contact-no"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              Mobile Number
            </FormLabel>
            <div>
              <img
                alt=""
                className="form-img"
                src="ph.PNG"
              />
              <input
                className="form-input"
                name="ph"
                placeholder="Mobile Number"
                type="number"
              />
            </div>
            <div
              className="box-3"
            >
              <button
                className="btn btn-three w-100"
                type="submit"
              >
                <span>
                  UPDATE
                </span>
              </button>
            </div>
          </FormGroup>
        </Form>
      </CardBody>
    </Card>
    <div
      className="w-100 text-center mt-2 form-txt"
    >
      <Link
        to="/profile"
      >
        Cancel
      </Link>
    </div>
  </div>,
]
`;
